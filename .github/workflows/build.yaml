name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 8
    
    - name: Build with Maven
        run: mvn -B package --file pom.xml --settings .maven/settings.xml

    - name: Publish to Anypoint Exchange
        run: mvn -B deploy --settings .maven/settings.xml -DskipMunitTests

    - name: Stamp artifact file name with commit hash
        shell: bash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2="${artifactName1%.jar}-$commitHash.jar"
          mv "$artifactName1" "$artifactName2"
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    
    - name: Checkout this repo
      uses: actions/checkout@v4
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@v4
      with:
        name: artifacts
    
    
    - name: Deploy to Sandbox
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy --settings .maven/settings.xml -DskipMunitTests \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
         #-Ddecryption.key="$KEY"
         
         
    
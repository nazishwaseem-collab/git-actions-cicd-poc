# This workflow will build a MuleSoft project, publish to Exchange, and deploy to CloudHub 2.0

name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CONNECTED_APP_CLIENT_ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
      CONNECTED_APP_CLIENT_SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}

    steps:	
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Give this run a unique version so Exchange doesn't reject duplicates
      - name: Set CI version (unique per run)
        run: |
          NEW_VERSION="1.0.${GITHUB_RUN_NUMBER}"
          mvn -B versions:set -DnewVersion="${NEW_VERSION}" -DgenerateBackupPoms=false
          echo "Using version: ${NEW_VERSION}"

      - name: Print effective-settings (optional)
        run: mvn -B help:effective-settings -s .maven/settings.xml

      - name: Build with Maven
        run: mvn -B clean package -s .maven/settings.xml

      - name: Stamp artifact file name with commit hash
        shell: bash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2="${artifactName1%.jar}-$commitHash.jar"
          mv "$artifactName1" "$artifactName2"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: target/*.jar
          if-no-files-found: error
          retention-days: 7

  upload:
    needs: build
    runs-on: ubuntu-latest
    env:
      CONNECTED_APP_CLIENT_ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
      CONNECTED_APP_CLIENT_SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: .

      # Ensure the same unique version is set in this job too (matches build job)
      - name: Set CI version (unique per run)
        run: |
          NEW_VERSION="1.0.${GITHUB_RUN_NUMBER}"
          mvn -B versions:set -DnewVersion="${NEW_VERSION}" -DgenerateBackupPoms=false
          echo "Using version: ${NEW_VERSION}"

      # Publish to Exchange via distributionManagement (server id = Repository)
      - name: Upload to Exchange
        run: |
          mvn -B deploy -s .maven/settings.xml -DskipMunitTests \	
            -Dclient.id="${CONNECTED_APP_CLIENT_ID}" \
            -Dclient.secret="${CONNECTED_APP_CLIENT_SECRET}"

  deploy:
    needs: upload
    runs-on: ubuntu-latest
    env:
      CONNECTED_APP_CLIENT_ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
      CONNECTED_APP_CLIENT_SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: .

      - name: Deploy to Sandbox (CloudHub 2.0)
        run: |
          echo "Found artifact(s):"
          ls -l *.jar
          mvn -B -s .maven/settings.xml \
            -DmuleDeploy \
            -DskipMunitTests \
            -Dclient.id="${CONNECTED_APP_CLIENT_ID}" \
            -Dclient.secret="${CONNECTED_APP_CLIENT_SECRET}"
